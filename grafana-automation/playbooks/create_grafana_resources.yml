---
- name: Grafana User and Dashboard Management
  hosts: localhost
  connection: local
  gather_facts: false

  vars:
    grafana_url: "{{ lookup('ansible.builtin.env', 'GRAFANA_URL') }}"
    grafana_username: "{{ lookup('ansible.builtin.env', 'GRAFANA_USERNAME') }}"
    grafana_password: "{{ lookup('ansible.builtin.env', 'GRAFANA_PASSWORD') }}"
    influxdb_admin_token: "{{ lookup('ansible.builtin.env', 'INFLUXDB_ADMIN_TOKEN') }}"

    json_file: "/srv/powerview/dashboard_master.json"
    exported_dashboard_json_file: "/srv/powerview/dashboard_exported.json"
    data_path: "/srv/sftpgo/data"

  tasks:
    - name: Check if dashboard created file exists
      stat:
        path: "{{ data_path }}/{{ company_name }}/{{campaign_name}}/.dashboard.created"
      register: dashboard_created

    - name: Create Grafana Team
      ansible.builtin.uri:
        url: "{{ grafana_url }}/api/teams"
        method: POST
        url_username: "{{ grafana_username }}"
        url_password: "{{ grafana_password }}"
        force_basic_auth: true
        body_format: json
        body:
          name: "{{ company_name }}"
        status_code: [200, 409]
        validate_certs: false
      register: created_team
      when: not dashboard_created.stat.exists

    - name: Create Grafana folder for team
      community.grafana.grafana_folder:
        url: "{{ grafana_url }}"
        url_username: "{{ grafana_username }}"
        url_password: "{{ grafana_password }}"
        title: "{{ company_name }}"
        state: present
        validate_certs: false
      register: created_folder
      when: not created_team.status | default(omit)== 409
        and not dashboard_created.stat.exists

    - name: Create InfluxDB datasource
      community.grafana.grafana_datasource:
        url: "{{ grafana_url }}"
        url_username: "{{ grafana_username }}"
        url_password: "{{ grafana_password }}"
        name: "influxdb_{{ company_name }}"
        ds_type: influxdb
        ds_url: "http://influxdb:8181"
        database: "{{ company_name }}"
        additional_json_data:
          version: "SQL"
          dbName: "{{company_name}}"
          insecureGrpc: true
        additional_secure_json_data:
          token: "{{ influxdb_admin_token }}"
        state: present
        validate_certs: false
      register: created_datasource

    - name: Export master dashboard as JSON file
      community.grafana.grafana_dashboard:
        url: "{{ grafana_url }}"
        url_username: "{{ grafana_username }}"
        url_password: "{{ grafana_password }}"
        state: export
        path: "{{ exported_dashboard_json_file}}"
        uid: "adq2j6z"
        validate_certs: false
      register: exported_dashboard
      when: not dashboard_created.stat.exists

    - name: Modify Grafana dashboard JSON
      ansible.builtin.shell: |
        jq 'del(.dashboard.version) | del(.dashboard.id) | del(.dashboard.uid) | del(.meta) | .dashboard.title = "{{ campaign_name }}" | (..|objects|select(.type=="influxdb" and has("uid"))|.uid) = "{{ created_datasource.datasource.uid }}"' "{{ exported_dashboard_json_file }}" > "{{ json_file }}"
      args:
        executable: /bin/bash
      when: not dashboard_created.stat.exists

    - name: Import dashboard from templated JSON
      community.grafana.grafana_dashboard:
        url: "{{ grafana_url }}"
        url_username: "{{ grafana_username }}"
        url_password: "{{ grafana_password }}"
        state: present
        path: "{{ json_file }}"
        folder: "{{ company_name }}"
        uid: '{{ lookup("pipe", "uuidgen") }}'
        overwrite: true
        validate_certs: false
      register: imported_dashboard
      when: not dashboard_created.stat.exists

    - name: Set dashboard permissions for team (viewer role)
      ansible.builtin.uri:
        url: "{{ grafana_url }}/api/dashboards/uid/{{imported_dashboard.uid}}/permissions"
        method: POST
        url_username: "{{ grafana_username }}"
        url_password: "{{ grafana_password }}"
        force_basic_auth: true
        body_format: json
        body:
          items:
            - teamId: "{{ created_team.json.teamId }}"
              permission: 1
        status_code: 200
        validate_certs: false
      when: not created_team.status | default(omit)== 409
        and not dashboard_created.stat.exists

    - name: Set folder permissions for team
      ansible.builtin.uri:
        url: "{{ grafana_url }}/api/folders/{{ created_folder.folder.uid }}/permissions"
        method: POST
        url_username: "{{ grafana_username }}"
        url_password: "{{ grafana_password }}"
        force_basic_auth: true
        body_format: json
        body:
          items:
            - teamId: "{{ created_team.json.teamId }}"
              permission: 1
        status_code: 200
        validate_certs: false
      when: not created_team.status | default(omit) == 409
        and not dashboard_created.stat.exists

    - name: Clean up temporary dashboard file
      ansible.builtin.file:
        path: "{{ item }}"
        state: absent
      loop:
        - "{{ json_file }}"
        - "{{ exported_dashboard_json_file }}"
      when: not dashboard_created.stat.exists

    - name: Touch a file -> Dashboard created
      ansible.builtin.file:
        path: "{{ data_path }}/{{ company_name }}/{{campaign_name}}/.dashboard.created"
        state: touch
      when: not dashboard_created.stat.exists

    - name: Display user credentials
      ansible.builtin.debug:
        msg:
          - "============================================"
          - "Grafana Resources Created Successfully!"
          - "============================================"
          - "Team: {{ company_name }}"
          - "Datasource: influxdb_{{ company_name }}"
          - "Dashboard: {{ company_name }}"
          - "Folder: {{ company_name }}"
